definitions:
  contract.Asset:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      type:
        type: string
    required:
    - description
    - name
    - price
    - type
    type: object
  contract.CreditInput:
    properties:
      assets:
        items:
          $ref: '#/definitions/contract.Asset'
        type: array
      auth_id:
        type: integer
      installment_period:
        type: integer
      otr_amount:
        type: number
      sales_channel:
        type: string
    required:
    - assets
    - auth_id
    - installment_period
    - otr_amount
    - sales_channel
    type: object
  contract.CreditOutput:
    properties:
      admin_fee:
        type: number
      assets:
        items:
          $ref: '#/definitions/contract.Asset'
        type: array
      auth_id:
        type: integer
      contract_number:
        type: string
      installment_amount:
        type: number
      installment_period:
        type: integer
      interest:
        type: number
      limit:
        $ref: '#/definitions/contract.Limit'
      otr_amount:
        type: number
      sales_channel:
        type: string
      total_interest:
        type: number
      uuid:
        type: string
    type: object
  contract.Limit:
    properties:
      tenor1:
        type: number
      tenor2:
        type: number
      tenor3:
        type: number
      tenor6:
        type: number
    type: object
  contract.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  contract.ProfileInput:
    properties:
      auth_id:
        type: integer
      date_of_birth:
        type: string
      full_name:
        type: string
      ktp_image:
        type: string
      legal_name:
        type: string
      nik:
        type: string
      place_of_birth:
        type: string
      salary:
        type: number
      selfie_image:
        type: string
    required:
    - date_of_birth
    - full_name
    - ktp_image
    - legal_name
    - nik
    - place_of_birth
    - salary
    - selfie_image
    type: object
  contract.ProfileOutput:
    properties:
      auth_id:
        type: integer
      date_of_birth:
        type: string
      full_name:
        type: string
      ktp_image:
        type: string
      legal_name:
        type: string
      limit:
        $ref: '#/definitions/contract.Limit'
      nik:
        type: string
      place_of_birth:
        type: string
      salary:
        type: number
      selfie_image:
        type: string
    required:
    - date_of_birth
    - full_name
    - ktp_image
    - legal_name
    - nik
    - place_of_birth
    - salary
    - selfie_image
    type: object
  contract.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - email
    - password
    - phone
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Kredit+ test.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Kredit+
  version: "1.0"
paths:
  /kredit-plus/customer/profile:
    post:
      description: Save Customer Profile.
      parameters:
      - description: the body to create a new Profile
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/contract.ProfileInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.ProfileOutput'
      security:
      - kreditplus-token: []
      summary: Create Profile.
      tags:
      - Customer
  /kredit-plus/login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/contract.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login.
      tags:
      - Auth
  /kredit-plus/register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/contract.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a User.
      tags:
      - Auth
  /kredit-plus/transaction/credit:
    post:
      description: Creating a new Credit Transaction.
      parameters:
      - description: the body to create a new credit transaction
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/contract.CreditInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract.CreditOutput'
      security:
      - kreditplus-token: []
      summary: Create New Credit Transaction. (Admin only)
      tags:
      - Transaction
securityDefinitions:
  kreditplus-token:
    description: 'Value is: "Bearer {access_token}", where access_token is retrieved
      from cms-service/v1/login'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
